environment:
  node_pre_gyp_accessKeyId:
    secure: vioM9wfAwkcAV2Btx0T6sdI+NxwnbSJLm00V49KzLJY=
  node_pre_gyp_secretAccessKey:
    secure: jJxKoyWputzRz2EjAT9i/vBzYt2+lcjKZ5D6O5TBaS9+anpYHn2XWbOut5dkOgh0
  node_pre_gyp_region: eu-central-1
  matrix:
    - NODE_VERSION: 8
      platform: x64
    - NODE_VERSION: 8
      platform: x86
    - NODE_VERSION: 7
      platform: x64
    - NODE_VERSION: 7
      platform: x86
    - NODE_VERSION: 6
      platform: x64
    - NODE_VERSION: 6
      platform: x86
    - NODE_VERSION: 5
      platform: x64
    - NODE_VERSION: 5
      platform: x86
    - NODE_VERSION: 4
      platform: x64
    - NODE_VERSION: 4
      platform: x86
    - NODE_VERSION: 0.12
      platform: x64
    - NODE_VERSION: 0.12
      platform: x86
    - NODE_VERSION: 0.10
      platform: x64
    - NODE_VERSION: 0.10
      platform: x86

os: unstable

install:
  - SET PATH=%cd%\node_modules\.bin\;%PATH%

  - ps: Update-NodeJsInstallation (Get-NodeJsLatestBuild $env:NODE_VERSION) $env:platform

  - IF %NODE_VERSION% LSS 1 npm -g install npm
  - IF %NODE_VERSION% LSS 1 set PATH=%APPDATA%\npm;%PATH%
  # work around an issue with node-gyp v3.3.1 and node 4x
  # package.json has no certificates in it so we're cool
  # https://github.com/nodejs/node-gyp/issues/921
  - IF %NODE_VERSION% == 4 npm config set -g cafile=package.json
  - IF %NODE_VERSION% == 4 npm config set -g strict-ssl=false

  # Check if new tag released and publish binary in this case.
  - SET PUBLISH_BINARY=%APPVEYOR_REPO_TAG%

build_script:
  - npm install --build-from-source --msvs_version=2013

test_script:
  - npm test

on_success:
  - IF %PUBLISH_BINARY% == true (node-pre-gyp package publish 2>&1)
  - IF %PUBLISH_BINARY% == true (node-pre-gyp clean)
  - IF %PUBLISH_BINARY% == true (npm install --fallback-to-build=false)
  - IF %PUBLISH_BINARY% == true (node-pre-gyp info)

deploy: OFF
